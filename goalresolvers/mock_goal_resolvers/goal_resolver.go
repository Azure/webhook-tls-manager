// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/Azure/webhook-tls-manager/goalresolvers (interfaces: WebhookTlsManagerGoalResolverInterface)

// Package mock_goal_resolvers is a generated GoMock package.
package mock_goal_resolvers

import (
	context "context"
	reflect "reflect"

	goalresolvers "github.com/Azure/webhook-tls-manager/goalresolvers"
	gomock "github.com/golang/mock/gomock"
)

// MockWebhookTlsManagerGoalResolverInterface is a mock of WebhookTlsManagerGoalResolverInterface interface.
type MockWebhookTlsManagerGoalResolverInterface struct {
	ctrl     *gomock.Controller
	recorder *MockWebhookTlsManagerGoalResolverInterfaceMockRecorder
}

// MockWebhookTlsManagerGoalResolverInterfaceMockRecorder is the mock recorder for MockWebhookTlsManagerGoalResolverInterface.
type MockWebhookTlsManagerGoalResolverInterfaceMockRecorder struct {
	mock *MockWebhookTlsManagerGoalResolverInterface
}

// NewMockWebhookTlsManagerGoalResolverInterface creates a new mock instance.
func NewMockWebhookTlsManagerGoalResolverInterface(ctrl *gomock.Controller) *MockWebhookTlsManagerGoalResolverInterface {
	mock := &MockWebhookTlsManagerGoalResolverInterface{ctrl: ctrl}
	mock.recorder = &MockWebhookTlsManagerGoalResolverInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockWebhookTlsManagerGoalResolverInterface) EXPECT() *MockWebhookTlsManagerGoalResolverInterfaceMockRecorder {
	return m.recorder
}

// Resolve mocks base method.
func (m *MockWebhookTlsManagerGoalResolverInterface) Resolve(arg0 context.Context) (*goalresolvers.WebhookTlsManagerGoal, *error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Resolve", arg0)
	ret0, _ := ret[0].(*goalresolvers.WebhookTlsManagerGoal)
	ret1, _ := ret[1].(*error)
	return ret0, ret1
}

// Resolve indicates an expected call of Resolve.
func (mr *MockWebhookTlsManagerGoalResolverInterfaceMockRecorder) Resolve(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Resolve", reflect.TypeOf((*MockWebhookTlsManagerGoalResolverInterface)(nil).Resolve), arg0)
}
